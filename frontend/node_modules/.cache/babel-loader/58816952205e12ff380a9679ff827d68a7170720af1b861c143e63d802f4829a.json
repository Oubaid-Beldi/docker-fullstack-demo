{"ast":null,"code":"var _jsxFileName = \"/home/oubaid/personal/fullstack-app/frontend/src/components/UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchUsers = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // If you have \"proxy\" in package.json this can be just '/api/users'\n      const res = await axios.get(\"/api/users\");\n      setUsers(res.data || []);\n    } catch (err) {\n      setError(err.message || \"Failed to fetch users\");\n      setUsers([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {\n    message: \"Loading users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginBottom: 8\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUsers,\n      children: \"Retry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n  if (!users.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No users found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: users.map(u => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [u.name, \" \", u.email ? `- ${u.email}` : \"\"]\n    }, u.id || u._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(UserList, \"vvG5G9m+JVa2SSWAm277lQVAKio=\");\n_c = UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Loader","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","loading","setLoading","error","setError","fetchUsers","res","get","data","err","message","fileName","_jsxFileName","lineNumber","columnNumber","children","style","color","marginBottom","onClick","length","map","u","name","email","id","_id","_c","$RefreshReg$"],"sources":["/home/oubaid/personal/fullstack-app/frontend/src/components/UserList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\n\nexport default function UserList() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchUsers = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // If you have \"proxy\" in package.json this can be just '/api/users'\n      const res = await axios.get(\"/api/users\");\n      setUsers(res.data || []);\n    } catch (err) {\n      setError(err.message || \"Failed to fetch users\");\n      setUsers([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  if (loading) return <Loader message=\"Loading users...\" />;\n\n  if (error)\n    return (\n      <div>\n        <div style={{ color: \"red\", marginBottom: 8 }}>Error: {error}</div>\n        <button onClick={fetchUsers}>Retry</button>\n      </div>\n    );\n\n  if (!users.length) return <div>No users found.</div>;\n\n  return (\n    <ul>\n      {users.map((u) => (\n        <li key={u.id || u._id}>\n          {u.name} {u.email ? `- ${u.email}` : \"\"}\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF;MACA,MAAME,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,YAAY,CAAC;MACzCP,QAAQ,CAACM,GAAG,CAACE,IAAI,IAAI,EAAE,CAAC;IAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZL,QAAQ,CAACK,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;MAChDV,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA,CAACF,MAAM;IAACgB,OAAO,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEzD,IAAIX,KAAK,EACP,oBACEP,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAKoB,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAH,QAAA,GAAC,SAAO,EAACZ,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnElB,OAAA;MAAQuB,OAAO,EAAEd,UAAW;MAAAU,QAAA,EAAC;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;EAGV,IAAI,CAACf,KAAK,CAACqB,MAAM,EAAE,oBAAOxB,OAAA;IAAAmB,QAAA,EAAK;EAAe;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEpD,oBACElB,OAAA;IAAAmB,QAAA,EACGhB,KAAK,CAACsB,GAAG,CAAEC,CAAC,iBACX1B,OAAA;MAAAmB,QAAA,GACGO,CAAC,CAACC,IAAI,EAAC,GAAC,EAACD,CAAC,CAACE,KAAK,GAAG,KAAKF,CAAC,CAACE,KAAK,EAAE,GAAG,EAAE;IAAA,GADhCF,CAAC,CAACG,EAAE,IAAIH,CAAC,CAACI,GAAG;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAAChB,EAAA,CA7CuBD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}